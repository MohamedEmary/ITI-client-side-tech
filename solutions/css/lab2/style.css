/* 
- **Flexbox Layout:**
    1. Use Flexbox to display the cards in a row on large screens, and stack them in a column on screens smaller than 700px.
    2. Add a gap of `24px` between cards.
    3. Center the cards horizontally and vertically within the viewport.
 */

.card-container {
    display: flex;
    gap: 24px;
    justify-content: center;
    align-items: center;
}

/* 
 - **Card Styling:**
    1. Give each card a fixed width (`300px`), padding (`20px`), border-radius (`12px`), and a subtle box-shadow.
    2. Use Flexbox inside each card to space the content vertically (title, text, button).

*/
.card {
    width: 300px;
    padding: 20px;
    border-radius: 12px;
    box-shadow: inset 10px 10px 5px lightblue;
    background-color: gold;

    display: flex;
    flex-direction: column;
    gap: 10px;
}

/*
- **Badge Positioning:**
    1. Use `position: absolute` to place the `.badge` in the top-right corner of each card.
    2. Make sure the card has `position: relative` so the badge is positioned correctly.
    3. Style the badge with a background color, white text, and some padding.
*/

.card {
    position: relative;
}

.badge {
    position: absolute;
    top: 0;
    right: 0;
    background-color: red;
    color: white;
    padding: 10px;
}

/*
- **Button Styling:**
    1. Style the button to look modern (rounded corners, background color, hover effect).

- **Responsiveness:**
    1. Use a media query to stack the cards vertically on screens smaller than 700px.
*/

button {
    border-radius: 5px;
    background-color: rgb(90, 90, 255);
    color: white;
    border: 0;
    padding: 10px 0;
    cursor: pointer;
}

button:hover {
    background-color: rgb(48, 48, 176);
}

@media screen and (max-width: 1024px) {
    .card-container {
        flex-direction: column;
        flex-wrap: wrap;
    }
    .card {
        width: 150px;
    }
}

@media screen and (max-width: 768px) {
    .card {
        width: 100%;
    }
}
